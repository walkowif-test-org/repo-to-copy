---
# This is a workflow that is specific to admiralci
# It's not inteded to be used by other projects

name: Propagate renv.lock

on:
  pull_request:
    branches:
      - main
    paths:
      - renv.lock
      - renv/**
jobs:
  propagation:
    name: Propagate renv.lock
    runs-on: ubuntu-latest
    env:
      PR_BRANCH_NAME: automated-renv-lock-propagation
    strategy:
      matrix:
        # Run all steps in this job for the following repositories.
        repos:
          - name: gh-to-gh
            target-branch: main
            reviewers:
              - cicdguy
              - arkadiuszbeer
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v3

      - name: Checkout ${{ matrix.repos.name }}
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository_owner }}/${{ matrix.repos.name }}
          path: ./extension-repo
          token: ${{ secrets.WALKOWIF_TEST }}

      - name: Update renv.lock in ${{ matrix.repos.name }}
        run: |
          cd extension-repo && git status
          # If it'll be required to create PR_BRANCH_NAME, it has to be branched off
          # from the target branch so we switch to target branch first
          git fetch origin ${{ matrix.repos.target-branch }}
          git checkout ${{ matrix.repos.target-branch }}
          # Update local branch if remote branch already exists
          git fetch origin $PR_BRANCH_NAME@${{ matrix.repos.target-branch }} || true
          # Switch to the branch or create if doesn't exist
          git checkout $PR_BRANCH_NAME@${{ matrix.repos.target-branch }} || git checkout -b $PR_BRANCH_NAME@${{ matrix.repos.target-branch }}
          # Required to pull the branch because stefanzweifel/git-auto-commit-action
          # doesn't have support for automatic pulling
          git pull origin $PR_BRANCH_NAME@${{ matrix.repos.target-branch }} || true
          # Update renv.lock file with the latest version from central repo
          cp ../renv.lock .
          # Also update the renv directory
          rm -rf renv && cp -r ../renv .
          # Also update the R_VERSION setting in workflows to match
          # what's available in the renv.lock file
          R_VERSION=$(cat ../renv.lock | jq -r '.R.Version')
          perl -p -i -e "s/r-version: .*/r-version: \"${R_VERSION}\"/" .github/workflows/*

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: renv update from ${{ github.repository }}
          file_pattern: 'renv.lock renv/*'
          repository: extension-repo
          branch: ${{ env.PR_BRANCH_NAME }}@${{ matrix.repos.target-branch }}
          create_branch: true

      - name: Create Pull Request in ${{ matrix.repos.name }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WALKOWIF_TEST }}
          script: |
            const repo_owner = "${{ github.repository_owner }}";
            const repo_name = "${{ matrix.repos.name }}";

            console.log("Creating a new PR");
            const result2 = await github.rest.pulls.create({
              title: 'Propagate renv.lock from ${{ github.repository }}',
              owner: repo_owner,
              repo: repo_name,
              head: '${{ env.PR_BRANCH_NAME }}@${{ matrix.repos.target-branch }}',
              base: '${{ matrix.repos.target-branch }}',
              body: [
                'This PR has been automatically generated by ',
                'renv.lock propagation workflow from ${{ github.repository }}.',
                '\n\nPlease review the changes.'
              ].join('')
            });
            console.log("PR number");
            console.log(result2.data.number);
            const result3 = await github.rest.pulls.requestReviewers({
              owner: repo_owner,
              repo: repo_name,
              pull_number: result2.data.number,
              reviewers: '${{ matrix.repos.reviewers }}'
            });
